/*
 *
 * (c) Copyright Talegen, LLC.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Talegen.Storage.Net.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Talegen.Storage.Net.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal unhandled error occurred. The message reported was &quot;{0}&quot;..
        /// </summary>
        public static string ExceptionErrorText {
            get {
                return ResourceManager.GetString("ExceptionErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of the file &apos;{0}&apos; could not be deserialized to type &apos;{1}&apos;..
        /// </summary>
        public static string FileContentsCannotBeDeserializedErrorText {
            get {
                return ResourceManager.GetString("FileContentsCannotBeDeserializedErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &quot;{0}&quot; could not be accessed due to permissions. See &quot;{1}&quot;.
        /// </summary>
        public static string StorageAccessDeniedErrorText {
            get {
                return ResourceManager.GetString("StorageAccessDeniedErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage folder &quot;{0}&quot; cannot be deleted because its contents are not empty..
        /// </summary>
        public static string StorageCannotDeleteRecursiveErrorText {
            get {
                return ResourceManager.GetString("StorageCannotDeleteRecursiveErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage folder &quot;{0}&quot; command could not be completed due to &quot;{1}&quot;.
        /// </summary>
        public static string StorageDirectoryCommandErrorText {
            get {
                return ResourceManager.GetString("StorageDirectoryCommandErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage folder &quot;{0}&quot; does not exist..
        /// </summary>
        public static string StorageDirectoryDoesNotExistErrorText {
            get {
                return ResourceManager.GetString("StorageDirectoryDoesNotExistErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage folder &quot;{0}&quot; already exists..
        /// </summary>
        public static string StorageDirectoryExistsErrorText {
            get {
                return ResourceManager.GetString("StorageDirectoryExistsErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage path &quot;{0}&quot; was not found..
        /// </summary>
        public static string StorageNotFoundErrorText {
            get {
                return ResourceManager.GetString("StorageNotFoundErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path specified in &quot;{0}&quot; did not match the root path &quot;{1}&quot;. All folders must be created under the root path..
        /// </summary>
        public static string StoragePathSpecifiedNotInRootErrorText {
            get {
                return ResourceManager.GetString("StoragePathSpecifiedNotInRootErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target path &quot;{0}&quot; already exists..
        /// </summary>
        public static string StorageTargetExistsErrorText {
            get {
                return ResourceManager.GetString("StorageTargetExistsErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive file was not created because one or more files to archive were not found..
        /// </summary>
        public static string StorageZipFilesNotFoundErrorText {
            get {
                return ResourceManager.GetString("StorageZipFilesNotFoundErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided stream cannot be read..
        /// </summary>
        public static string StreamReadErrorText {
            get {
                return ResourceManager.GetString("StreamReadErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided stream cannot be written to..
        /// </summary>
        public static string StreamWriteErrorText {
            get {
                return ResourceManager.GetString("StreamWriteErrorText", resourceCulture);
            }
        }
    }
}
